OK: com.google.common.util.concurrent.AtomicDouble Method accumulateAndGet(double, java.util.function.DoubleBinaryOperator)
MISSING @SINCE TAG: com.google.common.util.concurrent.AtomicDoubleArray Method accumulateAndGet(int, double, java.util.function.DoubleBinaryOperator)
MISSING @SINCE TAG: com.google.common.util.concurrent.AtomicDouble Method getAndAccumulate(double, java.util.function.DoubleBinaryOperator)
MISSING @SINCE TAG: com.google.common.util.concurrent.AtomicDoubleArray Method getAndAccumulate(int, double, java.util.function.DoubleBinaryOperator)
MISSING @SINCE TAG: com.google.common.util.concurrent.AtomicDouble Method getAndUpdate(java.util.function.DoubleUnaryOperator)
MISSING @SINCE TAG: com.google.common.util.concurrent.AtomicDoubleArray Method getAndUpdate(int, java.util.function.DoubleUnaryOperator)
NO DOC BLOCK: com.google.common.reflect.MutableTypeToInstanceMap Method putInstance(com.google.common.reflect.TypeToken<T>, T extends B)
NO DOC BLOCK: com.google.common.reflect.MutableTypeToInstanceMap Method putInstance(java.lang.Class<T>, T extends B)
MISSING @SINCE TAG: com.google.common.reflect.TypeToInstanceMap Method putInstance(com.google.common.reflect.TypeToken<T>, T extends B)
MISSING @SINCE TAG: com.google.common.reflect.TypeToInstanceMap Method putInstance(java.lang.Class<T>, T extends B)
MISSING @SINCE TAG: com.google.common.util.concurrent.AtomicDouble Method updateAndGet(java.util.function.DoubleUnaryOperator)
MISSING @SINCE TAG: com.google.common.util.concurrent.AtomicDoubleArray Method updateAndGet(int, java.util.function.DoubleUnaryOperator)
